// Generated by CoffeeScript 1.3.3
(function() {
  var exports, _;

  _ = require('underscore');

  exports = module.exports = {
    test: function(name, fn) {
      return function() {
        var assert, failed, i, message, passed, result, resultText, testResults, _i, _len, _ref;
        testResults = [];
        assert = {
          ok: function(bool, name) {
            if (name == null) {
              name = "Unnamed test";
            }
            return testResults.push([bool, name]);
          },
          equal: function(actual, expected, name) {
            var message;
            if (typeof message === "undefined" || message === null) {
              name = "Unnamed test";
            }
            message = "\nActual:\n" + (actual.replace(/\n/g, "\\n\n")) + "\n\nExpected:\n" + (expected.replace(/\n/g, "\\n\n"));
            return testResults.push([_.isEqual(actual, expected), name, message]);
          }
        };
        failed = 0;
        passed = 0;
        console.log("Test: " + name);
        fn(assert);
        for (i = _i = 0, _len = testResults.length; _i < _len; i = ++_i) {
          _ref = testResults[i], result = _ref[0], name = _ref[1], message = _ref[2];
          resultText = result ? "Passed" : "Failed";
          console.log("Test '" + name + "' " + resultText);
          if (message != null) {
            console.log(message);
          }
          if (result) {
            passed++;
          } else {
            failed++;
          }
        }
        console.log("" + passed + " tests passed, " + failed + " tests failed");
        console.log("");
        return failed === 0;
      };
    },
    module: function(name, tests) {
      var allTestResults, failedResults, passedResults, test;
      console.log("------------------------------------------------");
      console.log(name);
      console.log("------------------------------------------------");
      console.log("");
      allTestResults = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = tests.length; _i < _len; _i++) {
          test = tests[_i];
          _results.push(test());
        }
        return _results;
      })();
      passedResults = _(allTestResults).filter(function(result) {
        return result;
      }).length;
      failedResults = _(allTestResults).filter(function(result) {
        return !result;
      }).length;
      console.log("------------------------------------------------");
      console.log("" + passedResults + " tests of " + allTestResults.length + " passed");
      if (failedResults > 0) {
        console.log("" + failedResults + " tests of " + allTestResults.length + " failed");
      }
      return console.log("------------------------------------------------");
    }
  };

}).call(this);
